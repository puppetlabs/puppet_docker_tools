#!/usr/bin/env ruby
require 'docopt'
require File.expand_path(File.join(File.dirname(__FILE__), "..", "lib", 'puppet_docker_tools.rb'))
require 'puppet_docker_tools/runner'

doc = <<DOC
Utilities for building and releasing Puppet docker images.

Usage:
  puppet-docker build [DIRECTORY] [--repository=<repo>] [--namespace=<namespace>] [--no-cache]
  puppet-docker lint [DIRECTORY]
  puppet-docker pull [IMAGE] [--repository=<repo>]
  puppet-docker push [DIRECTORY] [--repository=<repo>] [--namespace=<namespace>]
  puppet-docker rev-labels [DIRECTORY] [--namespace=<namespace>]
  puppet-docker spec [DIRECTORY]
  puppet-docker test [DIRECTORY]
  puppet-docker version [DIRECTORY] [--namespace=<namespace>]
  puppet-docker update-base-images [TAG]...
  puppet-docker help

Arguments:
  DIRECTORY  Directory containing the Dockerfile for the image you're operating on. Defaults to $PWD
  IMAGE      The docker image to operate on, including namespace. Defaults to '<repo>/#{File.basename(Dir.pwd)}'
  TAG        Pull latest versions of images at TAG. Defaults to ['ubuntu:16.04', 'centos:7', 'alpine:3.4', 'debian:9', 'postgres:9.6.8']

Options:
  --repository=<repo>      Dockerhub repository containing the image [default: puppet]
  --no-cache               Disable use of layer cache when building this image. Defaults to using the cache.
  --namespace=<namespace>  Namespace for labels on the container [default: org.label-schema]
DOC

begin
  options = Docopt::docopt(doc)
rescue Docopt::Exit
  puts doc
  exit
end

defaults = {
  'DIRECTORY'    => Dir.pwd,
  'TAG'          => ['ubuntu:16.04', 'centos:7', 'alpine:3.4', 'debian:9', 'postgres:9.6.8'],
  '--namespace'  => 'org.label-schema',
  '--repository' => 'puppet',
}

options.merge!(defaults) do |key, option, default|
  if option.nil? || Array(option).empty?
    default
  else
    option
  end
end

if options['IMAGE'].nil?
  options['IMAGE'] = "#{options['--repository']}/#{File.basename(options['DIRECTORY'])}"
end

command_runner = PuppetDockerTools::Runner.new(directory: options['DIRECTORY'], repository: options['--repository'], namespace: options['--namespace'])

begin
  if options['build']
    command_runner.build(no_cache: options['--no-cache'])
  elsif options['lint']
    command_runner.lint
  elsif options['pull']
    PuppetDockerTools::Utilities.pull(options['IMAGE'])
  elsif options['push']
    command_runner.push
  elsif options['rev-labels']
    command_runner.rev_labels
  elsif options['spec']
    command_runner.spec
  elsif options['test']
    command_runner.lint
    command_runner.spec
  elsif options['update-base-images']
    PuppetDockerTools::Utilities.update_base_images(options['TAG'])
  elsif options['version']
    command_runner.version
  elsif options['help']
    puts doc
  end
rescue => e
  puts "ERROR:\n\t#{e}"
  exit 1
end
