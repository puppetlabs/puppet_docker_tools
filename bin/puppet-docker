#!/usr/bin/env ruby
require 'docopt'
require File.expand_path(File.join(File.dirname(__FILE__), "..", "lib", 'puppet_docker_tools.rb'))
require 'puppet_docker_tools/runner'

doc = <<DOC
Utilities for building and releasing Puppet docker images.

Usage:
  puppet-docker build [DIRECTORY] [--dockerfile=<dockerfile>] [--repository=<repo>] [--namespace=<namespace>] [--no-cache] [--version=<version] [--build-arg=<buildarg> ...] [--no-latest]
  puppet-docker lint [DIRECTORY] [--dockerfile=<dockerfile>]
  puppet-docker local-lint [DIRECTORY] [--dockerfile=<dockerfile>]
  puppet-docker pull [IMAGE] [--repository=<repo>]
  puppet-docker push [DIRECTORY] [--dockerfile=<dockerfile>] [--repository=<repo>] [--namespace=<namespace>] [--no-latest]
  puppet-docker rev-labels [DIRECTORY] [--dockerfile=<dockerfile>] [--namespace=<namespace>]
  puppet-docker spec [DIRECTORY]
  puppet-docker test [DIRECTORY] [--dockerfile=<dockerfile>]
  puppet-docker version [DIRECTORY] [--dockerfile=<dockerfile>] [--namespace=<namespace>]
  puppet-docker update-base-images [TAG]...
  puppet-docker help

Arguments:
  DIRECTORY  Directory containing the Dockerfile for the image you're operating on. Defaults to $PWD
  IMAGE      The docker image to operate on, including namespace. Defaults to '<repo>/#{File.basename(Dir.pwd)}'
  TAG        Pull latest versions of images at TAG. Defaults to ['ubuntu:16.04', 'centos:7', 'alpine:3.4', 'debian:9', 'postgres:9.6.8']

Options:
  --repository=<repo>        Docker repository containing the image [default: puppet]
  --no-cache                 Disable use of layer cache when building this image. Defaults to using the cache.
  --namespace=<namespace>    Namespace for labels on the container [default: org.label-schema]
  --dockerfile=<dockerfile>  File name for your dockerfile [default: Dockerfile]
  --version=<version>        Version to build. This field will be used to determine the label and will be passed as the version build arg.
                             **NOTE** `--build-arg version='<version>'` overrides `--version <version>`
  --build-arg=<buildarg>     Build arg to pass to container build, can be passed multiple times.
  --no-latest                Do not include the 'latest' tag when building and shipping images. By default, the 'latest' tag is built and
                             shipped with the versioned tag.
DOC

begin
  options = Docopt::docopt(doc)
rescue Docopt::Exit
  puts doc
  exit
end

defaults = {
  'DIRECTORY'    => Dir.pwd,
  'TAG'          => ['ubuntu:16.04', 'centos:7', 'alpine:3.4', 'debian:9', 'postgres:9.6.8'],
  '--namespace'  => 'org.label-schema',
  '--repository' => 'puppet',
  '--dockerfile' => 'Dockerfile',
  '--version'    => nil,
  '--build-arg'  => [],
  '--no-latest'  => false,
}

options.merge!(defaults) do |key, option, default|
  if option.nil? || Array(option).empty?
    default
  else
    option
  end
end

if options['IMAGE'].nil?
  options['IMAGE'] = "#{options['--repository']}/#{File.basename(options['DIRECTORY'])}"
end

begin
  if options['help']
    puts doc
  elsif options['pull']
    PuppetDockerTools::Utilities.pull(options['IMAGE'])
  elsif options['update-base-images']
    PuppetDockerTools::Utilities.update_base_images(options['TAG'])
  else
    command_runner = PuppetDockerTools::Runner.new(directory: options['DIRECTORY'], repository: options['--repository'], namespace: options['--namespace'], dockerfile: options['--dockerfile'])

    latest = true
    if options['--no-latest']
      latest = false
    end

    if options['build']
      command_runner.build(no_cache: options['--no-cache'], version: options['--version'], build_args: options['--build-arg'], latest: latest)
    elsif options['lint']
      command_runner.lint
    elsif options['local-lint']
      command_runner.local_lint
    elsif options['push']
      command_runner.push(latest: latest)
    elsif options['rev-labels']
      command_runner.rev_labels
    elsif options['spec']
      command_runner.spec
    elsif options['test']
      command_runner.lint
      command_runner.spec
    elsif options['version']
      command_runner.version
    end
  end
rescue => e
  puts "ERROR:\n\t#{e}"
  exit 1
end
